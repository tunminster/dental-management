apiVersion: apps/v1
kind: Deployment
metadata:
  name: dental-management-dashboard
  labels:
    app: dental-management-dashboard
    version: v1.0.0
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dental-management-dashboard
  template:
    metadata:
      labels:
        app: dental-management-dashboard
        version: v1.0.0
    spec:
      containers:
      - name: dental-dashboard
        image: #{repository-image}#
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_API_BASE_URL
          value: #{api-host}#
        - name: REACT_APP_APP_NAME
          value: "Dental Management Dashboard"
        - name: REACT_APP_APP_VERSION
          value: "1.0.0"
        - name: REACT_APP_ENVIRONMENT
          value: "production"
        - name: REACT_APP_API_TIMEOUT
          value: "15000"
        - name: REACT_APP_API_RETRY_ATTEMPTS
          value: "3"
        - name: REACT_APP_DEBUG
          value: "false"
        - name: REACT_APP_LOG_LEVEL
          value: "error"
        - name: REACT_APP_ENABLE_ANALYTICS
          value: "true"
        - name: REACT_APP_ENABLE_ERROR_REPORTING
          value: "true"
        - name: REACT_APP_DOMAIN
          value: #{app-domain}#
        - name: REACT_APP_APP_URL
          value: #{app-domain-url}#
      imagePullPolicy: IfNotPresent
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: dental-management-service
  labels:
    app: dental-management-dashboard
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: dental-management-dashboard
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dental-management-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - #{app-domain}#
    secretName: dental-dashboard-tls
  rules:
  - host: #{app-domain}#
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: dental-management-service
            port:
              number: 80
